-- Global guard: prevents duplicate execution
if getgenv().CombatScriptLoaded then return end
getgenv().CombatScriptLoaded = true

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")

local LP = Players.LocalPlayer
local Character = LP.Character or LP.CharacterAdded:Wait()

-- Default states
local attackingSolstice = false
local attackingCannon = true   -- enabled by default
local teleportAbove = true     -- enabled by default
local alrasidFocus = false
local alrasidDefeated = false

-- Handle respawn: update Character and reset toggles
LP.CharacterAdded:Connect(function(c)
    Character = c
    c:WaitForChild("HumanoidRootPart")
    attackingSolstice = false
    attackingCannon = true
    teleportAbove = true
    alrasidFocus = false
end)

-- Wait 5s then send "/skipall" in chat using TextChatService
task.wait(5)
local channel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
channel:SendAsync("/skipall")

-- Toggle Solstice with X, Cannon with C, Teleport with V
UIS.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.X then attackingSolstice = not attackingSolstice end
    if input.KeyCode == Enum.KeyCode.C then attackingCannon = not attackingCannon end
    if input.KeyCode == Enum.KeyCode.V then teleportAbove = not teleportAbove end
end)

-- Find nearest valid target, optionally including Alrasid
local function getNearestTarget(maxDist, includeAlrasid)
    local closestHumanoid, closestHRP
    local minDist = maxDist or math.huge
    local root = Character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Humanoid") and obj.Health > 0 then
            local model = obj.Parent
            if model and model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
                local isPlayerChar = Players:GetPlayerFromCharacter(model) ~= nil
                local isSelf = model == Character
                local isTLSOC = (model.Name == "The Last Spirit of Christmas")
                local isAlrasid = (model.Name == "Alrasid, Archbishop of the Equinox")
                if not isSelf and not isPlayerChar and not isTLSOC and (includeAlrasid or not isAlrasid) then
                    local hrp = model.HumanoidRootPart
                    local dist = (hrp.Position - root.Position).Magnitude
                    if dist < minDist then
                        minDist = dist
                        closestHumanoid = obj
                        closestHRP = hrp
                    end
                end
            end
        end
    end
    return closestHumanoid, closestHRP
end
